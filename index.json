[{"content":"tbc\n","permalink":"https://fletcher.gornick.dev/projects/dynamic-proxy/","summary":"tbc","title":"dynamic proxy"},{"content":"tbc\n","permalink":"https://fletcher.gornick.dev/projects/code-mutator/","summary":"tbc","title":"code mutator"},{"content":"tbc\n","permalink":"https://fletcher.gornick.dev/projects/drone-simulation/","summary":"tbc","title":"drone search \u0026 rescue simulation"},{"content":"overview My program takes an input image, which is typically a digital image represented as a rectangular grid of pixels. Each pixel contains RGB values which I store into an array to perform basic filter operations on. Once a filter operation is applied to the pixels in the image, the modified image is stored as a separate specified output image.\nsupported features Currently, I support the following filter operations\u0026hellip;\ncanny-edge-detect double-threshold gaussian-blur greyscale hysteresis invert mean-blur non-max purplescale sharpening sobel solarization threshold threshold-low threshold-high The first option, canny-edge-detect actually chains greyscale, gaussian-blur, sobel, non-max, double-threshold, and hysteresis together. This provides a useful representation of the object boundaries and structural information within the image.\nexample source You can find my repo at https://github.com/fmgornick/image-processor\n","permalink":"https://fletcher.gornick.dev/projects/image-processor/","summary":"overview My program takes an input image, which is typically a digital image represented as a rectangular grid of pixels. Each pixel contains RGB values which I store into an array to perform basic filter operations on. Once a filter operation is applied to the pixels in the image, the modified image is stored as a separate specified output image.\nsupported features Currently, I support the following filter operations\u0026hellip;\ncanny-edge-detect double-threshold gaussian-blur greyscale hysteresis invert mean-blur non-max purplescale sharpening sobel solarization threshold threshold-low threshold-high The first option, canny-edge-detect actually chains greyscale, gaussian-blur, sobel, non-max, double-threshold, and hysteresis together.","title":"image processing software"}]