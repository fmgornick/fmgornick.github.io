<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>makefile on home</title><link>https://fletcher.gornick.dev/tags/makefile/</link><description>Recent content in makefile on home</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 30 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://fletcher.gornick.dev/tags/makefile/index.xml" rel="self" type="application/rss+xml"/><item><title>image processing software</title><link>https://fletcher.gornick.dev/projects/image-processor/</link><pubDate>Sat, 30 Oct 2021 00:00:00 +0000</pubDate><guid>https://fletcher.gornick.dev/projects/image-processor/</guid><description>overview My program takes an input image, which is typically a digital image represented as a rectangular grid of pixels. Each pixel contains RGB values which I store into an array to perform basic filter operations on. Once a filter operation is applied to the pixels in the image, the modified image is stored as a separate specified output image.
supported features Currently, I support the following filter operations&amp;hellip;
canny-edge-detect double-threshold gaussian-blur greyscale hysteresis invert mean-blur non-max purplescale sharpening sobel solarization threshold threshold-low threshold-high The first option, canny-edge-detect actually chains greyscale, gaussian-blur, sobel, non-max, double-threshold, and hysteresis together.</description><content:encoded><![CDATA[<h1 id="overview">overview</h1>
<p>My program takes an input image, which is typically a digital image represented as a rectangular grid of pixels. Each pixel contains RGB values which I store into an array to perform basic filter operations on. Once a filter operation is applied to the pixels in the image, the modified image is stored as a separate specified output image.</p>
<h1 id="supported-features">supported features</h1>
<p>Currently, I support the following filter operations&hellip;</p>
<ul>
<li>canny-edge-detect</li>
<li>double-threshold</li>
<li>gaussian-blur</li>
<li>greyscale</li>
<li>hysteresis</li>
<li>invert</li>
<li>mean-blur</li>
<li>non-max</li>
<li>purplescale</li>
<li>sharpening</li>
<li>sobel</li>
<li>solarization</li>
<li>threshold</li>
<li>threshold-low</li>
<li>threshold-high</li>
</ul>
<p>The first option, <code>canny-edge-detect</code> actually chains <code>greyscale</code>, <code>gaussian-blur</code>, <code>sobel</code>, <code>non-max</code>, <code>double-threshold</code>, and <code>hysteresis</code> together. This provides a useful representation of the object boundaries and structural information within the image.</p>
<h1 id="example">example</h1>
<p><img loading="lazy" src="./canny-edge-detect.gif" alt="canny edge detect example"  />
</p>
<h1 id="source">source</h1>
<p>You can find my repo at <a href="https://github.com/fmgornick/image-processor">https://github.com/fmgornick/image-processor</a></p>
]]></content:encoded></item></channel></rss>